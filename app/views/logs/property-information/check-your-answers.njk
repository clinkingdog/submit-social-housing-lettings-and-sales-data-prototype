{% extends "layouts/check-answers.njk" %}

{# Some answers may come from a scheme #}
{% macro schemeAnswer(field) -%}
  {%- if log["about-this-log"]["uses-scheme"] == "true" -%}
    {%- set schemeId = log["about-this-log"]["schemeId"] -%}
    {{ data.schemes[schemeId][field] }}
  {%- else -%}
    {{ log[section.id][field] }}
  {%- endif -%}
{%- endmacro %}

{# set variables to test various user selected data #}
{% set hasPostcode = schemeAnswer("postcode-known") == "true" %}
{% set hasLocalAurthority = schemeAnswer("local-authority-known") == "true" %}
{% set isRelet = log[section.id]["is-relet"] == "true" %}
{% set isNewlet = log[section.id]["is-relet"] == "false" %}
{% set isRepaired = log[section.id]["repairs"] == "true" %}
{% set isNewprop = log[section.id]["reason-for-non-relet"] == "newprop" %}
{% set isSupportedHousing = log["about-this-log"]["uses-scheme"] == "true" %}
{% set isRenewal = log["about-this-log"]["letting-renewal"] == "true" %}

{# Answer objects #}
{% set propertyReferenceRow = {
  key: {
    text: "Property reference"
  },
  value: {
    text: log[section.id]["property-reference"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/reference",
    visuallyHiddenText: "property reference"
  })
} %}

{% set postcodeRow = {
  key: {
    text: "Postcode"
  },
  value: {
    text: schemeAnswer("postcode") if hasPostcode else "Not known"
  },
  actions: actionLinks({
    href: sectionPath + "/postcode",
    visuallyHiddenText: "postcode"
  }) if not isSupportedHousing
} %}

{% set localAuthorityKnownRow = {
  key: {
    text: "Local authority known"
  },
  value: {
    text: schemeAnswer("local-authority-known") | textFromInputValue(data.questions["yes-no"])
  },
  actions: actionLinks({
    href: sectionPath + "/local-authority-known",
    visuallyHiddenText: "if local authority is known"
  }) if not isSupportedHousing
} if not hasPostcode %}

{% set localAuthorityRow = {
  key: {
    text: "Local authority"
  },
  value: {
    text: schemeAnswer("local-authorities") | textFromInputValue(data.questions["local-authorities"])
  },
  actions: actionLinks({
    href: sectionPath + "/local-authority",
    visuallyHiddenText: "local authority"
  }) if not isSupportedHousing
} if not hasPostcode and hasLocalAurthority %}

{% set reasonForNotKnowingRow = {
  key: {
    text: "Reason you donâ€™t know either the postcode or local authority"
  },
  value: {
    text: schemeAnswer("why-dont-you-know-postcode-or-la")
  },
  actions: actionLinks({
    href: sectionPath + "/why-dont-you-know-postcode-or-la",
    visuallyHiddenText: "the reason you don't know either the postcode or local authority"
  }) if not isSupportedHousing
} if not hasPostcode and not hasLocalAurthority %}

{% set isReletRow = {
  key: {
    text: "First time being let as social-housing"
  },
  value: {
    text: log[section.id]["is-relet"] | textFromInputValue(data.questions["re-let"])
  },
  actions: actionLinks({
    href: sectionPath + "/is-relet",
    visuallyHiddenText: "if this is the first time being let as social-housing"
  })
} %}

{% set typeOfLetRow = {
  key: {
    text: "Most recent let type"
  },
  value: {
    text: log[section.id]["type-of-let"] | textFromInputValue(data.questions["type-of-let"])
  },
  actions: actionLinks({
    href: sectionPath + "/type-of-let",
    visuallyHiddenText: "the recent let type"
  })
} if isRelet %}

{% set reasonForVacancyNonReletRow = {
  key: {
    text: "Vacancy reason"
  },
  value: {
    text: log[section.id]["reason-for-non-relet"] | textFromInputValue(data.questions["reason-for-vacancy-non-relet"])
  },
  actions: actionLinks({
    href: sectionPath + "/reason-for-vacancy-non-relet",
    visuallyHiddenText: "reason for vacancy"
  })
} if isNewlet %}

{% set reasonForVacancyRow = {
  key: {
    text: "Vacancy reason"
  },
  value: {
    text: log[section.id]["reason-for-vacancy"] | textFromInputValue(data.questions["reason-for-vacancy"])
  },
  actions: actionLinks({
    href: sectionPath + "/reason-for-vacancy",
    visuallyHiddenText: "reason for vacancy"
  })
} if isRelet %}

{% set typeOfUnitRow = {
  key: {
    text: "Type of unit"
  },
  value: {
    text: schemeAnswer("type-of-unit") | textFromInputValue(data.questions["type-of-unit"])
  },
  actions: actionLinks({
    href: sectionPath + "/type-of-unit",
    visuallyHiddenText: "type of unit"
  }) if not isSupportedHousing
} %}

{% set typeOfPropertyRow = {
  key: {
    text: "Type of building"
  },
  value: {
    text: schemeAnswer("type-of-property") | textFromInputValue(data.questions["type-of-property"])
  },
  actions: actionLinks({
    href: sectionPath + "/type-of-property",
    visuallyHiddenText: "type of building"
  }) if not isSupportedHousing
} %}

{% set isAdaptedRow = {
  key: {
    text: "Wheelchair adaptation"
  },
  value: {
    text: schemeAnswer("is-adapted") | textFromInputValue(data.questions["yes-no"])
  },
  actions: actionLinks({
    href: sectionPath + "/is-adapted",
    visuallyHiddenText: "if property has been built or adapted to wheelchair-user standards"
  }) if not isSupportedHousing
} %}

{% set numberOfBedroomsRow = {
  key: {
    text: "Number of bedrooms"
  },
  value: {
    text: log[section.id]["number-of-bedrooms"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/number-of-bedrooms",
    visuallyHiddenText: "number of bedrooms"
  })
} %}

{% set voidDateRow = {
  key: {
    text: "Void, new build handover or renewal date"
  },
  value: {
    text: log[section.id]["void-date"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/void-date",
    visuallyHiddenText: "void date"
  })
} %}

{% set repairsRow = {
  key: {
    text: "Major repairs carried out during the void period"
  },
  value: {
    text: log[section.id]["repairs"] | textFromInputValue(data.questions["yes-no"])
  },
  actions: actionLinks({
    href: sectionPath + "/repairs",
    visuallyHiddenText: "status of major repairs"
  })
} if not isNewprop %}

{% set repairsDateRow = {
  key: {
    text: "Repairs completion date"
  },
  value: {
    text: log[section.id]["repairs-date"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/repairs",
    visuallyHiddenText: "completion date for repairs"
  })
} if isRepaired %}

{% set timesOfferedRow = {
  key: {
    text: "Times previously offered since becoming available"
  },
  value: {
    text: log[section.id]["times-previously-offered"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/times-previously-offered",
    visuallyHiddenText: "times previously offered"
  })
} %}

{% block checkAnswers %}

  {% if isSupportedHousing and not isRenewal %}
    {{ govukSummaryList({
      rows: [
        propertyReferenceRow,
        postcodeRow,
        localAuthorityKnownRow,
        localAuthorityRow,
        reasonForNotKnowingRow,
        isReletRow,
        typeOfLetRow,
        reasonForVacancyNonReletRow,
        reasonForVacancyRow,
        typeOfUnit,
        typeOfProperty,
        adapted_for_wheelchair,
        voidDateRow,
        repairsRow,
        repairsDateRow,
        timesOfferedRow
      ]
    }) }}
  {% elif not isSupportedHousing and isRenewal %}
    {{ govukSummaryList({
      rows: [
        propertyReferenceRow,
        postcodeRow,
        localAuthorityKnownRow,
        localAuthorityRow,
        reasonForNotKnowingRow,
        typeOfUnitRow,
        typeOfPropertyRow,
        isAdaptedRow,
        numberOfBedroomsRow
      ]
    }) }}
  {% elif isSupportedHousing and isRenewal %}
    {{ govukSummaryList({
      rows: [
        propertyReferenceRow,
        postcodeRow,
        localAuthorityKnownRow,
        localAuthorityRow,
        reasonForNotKnowingRow,
        typeOfUnitRow,
        typeOfPropertyRow,
        isAdaptedRow
      ]
    }) }}
  {% else %}
    {{ govukSummaryList({
      rows: [
        propertyReferenceRow,
        postcodeRow,
        localAuthorityKnownRow,
        localAuthorityRow,
        reasonForNotKnowingRow,
        isReletRow,
        typeOfLetRow,
        reasonForVacancyNonReletRow,
        reasonForVacancyRow,
        typeOfUnitRow,
        typeOfPropertyRow,
        isAdaptedRow,
        numberOfBedroomsRow,
        voidDateRow,
        repairsRow,
        repairsDateRow,
        timesOfferedRow
      ]
    }) }}
  {% endif %}
{% endblock %}
