{% extends "layouts/check-answers.njk" %}

{% set isLet = log[section.id]["sale-or-letting"] == "letting" %}
{% set isSale = log[section.id]["sale-or-letting"] == "sale" %}
{% set isCompleted = log[section.id]["completed"] == "true" %}
{% set usingScheme = log[section.id]["uses-scheme"] == "true" %}

{% block checkAnswers %}
  {{ govukSummaryList({
    rows: [{
      key: {
        text: "Sale or letting"
      },
      value: {
        text: log[section.id]["sale-or-letting"] | textFromInputValue(data.questions["sale-or-letting"])
      },
      actions: actionLinks({
        href: sectionPath + "/sale-or-letting",
        visuallyHiddenText: "if sale or letting"
      }) if not isCompleted
    }, {
      key: {
        text: "Part of a supporting housing scheme"
      },
      value: {
        text: log[section.id]["uses-scheme"] | textFromInputValue(data.questions["yes-no"])
      },
      actions: actionLinks({
        href: sectionPath + "/uses-scheme",
        visuallyHiddenText: "if part of a supported housing scheme"
      }) if not isCompleted
    } if isLet, {
      key: {
        text: "Scheme name"
      },
      value: {
        text: data.schemes[log[section.id]["schemeId"]].name
      },
      actions: actionLinks({
        href: sectionPath + "/scheme",
        visuallyHiddenText: "scheme name"
      }) if not isCompleted
    } if log[section.id]["schemeId"], {
      key: {
        text: "Owning organisation"
      },
      value: {
        text: data.organisations[log[section.id]["organisation-owner"]].name | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/organisation",
        visuallyHiddenText: "owning organisation"
      }) if not isCompleted
    } if isLet and not usingScheme, {
      key: {
        text: "Managing organisation"
      },
      value: {
        text: data.organisations[log[section.id]["organisation-manager"]].name | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/organisation",
        visuallyHiddenText: "managing organisation"
      }) if not isCompleted
    } if isLet and not usingScheme, {
      key: {
        text: "Property renewal"
      },
      value: {
        text: log[section.id]["letting-renewal"] | textFromInputValue(data.questions["yes-no"])
      },
      actions: actionLinks({
        href: sectionPath + "/letting-renewal",
        visuallyHiddenText: "if renewal"
      }) if not isCompleted
    } if isLet, {
      key: {
        text: "Tenacy start date"
      },
      value: {
        text: log[section.id]["letting-start-date"] | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/letting-start-date",
        visuallyHiddenText: "tenacy start date"
      }) if not isCompleted
    } if isLet, {
      key: {
        text: "Rent type"
      },
      value: {
        text: log[section.id]["type-of-rent"] | textFromInputValue(data.questions["type-of-rent"])
      },
      actions: actionLinks({
        href: sectionPath + "/type-of-rent",
        visuallyHiddenText: "rent type"
      }) if not isCompleted
    } if isLet, {
      key: {
        text: "Tenant code"
      },
      value: {
        text: log[section.id]["tenant-code"] | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/tenant-code",
        visuallyHiddenText: "tenant code"
      })
    } if isLet, {
      key: {
        text: "Sale completion date"
      },
      value: {
        text: log[section.id]["sale-completion-date"] | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/sale-completion-date",
        visuallyHiddenText: "sale completion date"
      }) if not isCompleted
    } if isSale, {
      key: {
        text: "Purchaser code"
      },
      value: {
        text: log[section.id]["purchaser-code"] | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/purchaser-code",
        visuallyHiddenText: "purchaser code"
      })
    } if isSale, {
      key: {
        text: "Property reference"
      },
      value: {
        text: log[section.id]["property-reference"] | textFromInputValue
      },
      actions: actionLinks({
        href: sectionPath + "/property-reference",
        visuallyHiddenText: "property reference"
      })
    }]
  }) }}

  {% if isCompleted %}
    {{ govukDetails({
      summaryText: "Why can’t I change some of these answers?",
      html: 'We ask different questions about this log based on the answers you give us. If you want to change any information, you must <a href="#">delete this log and create a new one</a>.'
    }) }}
  {% else %}
    {{ govukWarningText({
      text: "You won’t be able to change some of these answers after you’ve saved them.",
      iconFallbackText: "Warning"
    }) }}
  {% endif %}
{% endblock %}
